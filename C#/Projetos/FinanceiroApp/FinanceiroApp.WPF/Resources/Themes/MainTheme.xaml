<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <SolidColorBrush x:Key="mainBackgroundColor" Color="#03045e"/>
    <SolidColorBrush x:Key="secondaryBackgroundColor" Color="#0077b6"/>
    <SolidColorBrush x:Key="mainForegroundColor" Color="#caf0f8"/>
    <SolidColorBrush x:Key="white" Color="White"/>

    <!--Paleta de cores-->
    <SolidColorBrush x:Key="blue1" Color="#03045e"/>
    <SolidColorBrush x:Key="blue2" Color="#0077b6"/>
    <SolidColorBrush x:Key="blue3" Color="#00b4d8"/>
    <SolidColorBrush x:Key="blue4" Color="#90e0ef"/>
    <SolidColorBrush x:Key="blue5" Color="#caf0f8"/>

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="MenuRadioButtonTheme">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid VerticalAlignment="Stretch"
                              HorizontalAlignment="Stretch"
                              Background="{TemplateBinding Background}">

                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       Foreground="{StaticResource MaterialDesignDarkForeground}"
                                       VerticalAlignment="Center"
                                       FontSize="15"
                                       Focusable="False"
                                       Margin="2 0 0 0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>

        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}"/>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type Border}"
           x:Key="MainBorderTheme">
        <Style.Setters>
            <Setter Property="Background" Value="{StaticResource mainBackgroundColor}"/>
            <Setter Property="BorderThickness" Value="0 0 0 0"/>
        </Style.Setters>
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource MaterialDesignBody1TextBlock}"
           x:Key="TextBlockStyle">
        <Setter Property="FontFamily" Value="{StaticResource MaterialDesignFont}"/>
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignDarkForeground}"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           x:Key="titleTextBlockStyle"
           BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}"
           x:Key="subTitleTextBlockStyle"
           BasedOn="{StaticResource TextBlockStyle}">
        <Setter Property="FontSize" Value="18"/>
    </Style>

    <Style TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource MaterialDesignComboBox}"
           x:Key="mainComboboxStyle">
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignDarkForeground}"/>
    </Style>

    <Style TargetType="{x:Type DatePicker}"
           BasedOn="{StaticResource MaterialDesignDatePicker}"
           x:Key="mainDatePickerStyle">
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignLightForeground}"/>
    </Style>

    <Style TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource MaterialDesignTextBox}"
           x:Key="mainTextBoxStyle">
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignDarkForeground}"/>
    </Style>

    <Style TargetType="{x:Type PasswordBox}"
           BasedOn="{StaticResource MaterialDesignPasswordBox}"
           x:Key="mainPasswordBoxStyle">
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignDarkForeground}"/>
    </Style>

    <Style TargetType="{x:Type CheckBox}"
           BasedOn="{StaticResource MaterialDesignCheckBox}"
           x:Key="mainCheckBoxStyle">
        <Setter Property="Foreground" Value="{StaticResource MaterialDesignDarkForeground}"/>
    </Style>

</ResourceDictionary>